Test module: def matrix_divided(matrix, div):
------------
This is an example text file in reStructuredText format.
------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Try it:
>>> matrix_divided([[0, -2, 1], [4, -3, 6]], 2)
[[0.0, -1.0, 0.5], [2.0, -1.5, 3.0]]

>>> matrix_divided([[0, -2, 1], [4, -3, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided("not_a_list", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0, -2, 1], "not_a_list"], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(None, None)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[0, -2, 1], [4, -3, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number
