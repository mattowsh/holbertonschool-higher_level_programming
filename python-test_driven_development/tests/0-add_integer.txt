Test module: def add_integer(a, b=98)
------------
This is an example text file in reStructuredText format.
------------

First import ``add_integer`` from the ``0-add_integer`` module:
>>> add_integer = __import__('0-add_integer').add_integer

Try it:
>>> add_integer(3, 4)
7

>>> add_integer(5, -2)
3

>>> add_integer(-7, 3)
-4

>>> add_integer(10)
108

>>> add_integer(2, 'string')
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("2string")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1.5, 2.3)
3

add_integer(2, 5aa)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
